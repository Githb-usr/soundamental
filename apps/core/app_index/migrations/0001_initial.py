# Generated by Django 5.1.6 on 2025-07-20 13:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom de la catégorie (ex: Artiste, Label, Compilation).', max_length=50, unique=True, verbose_name='Nom')),
                ('description', models.CharField(blank=True, help_text='Description de la catégorie.', max_length=255, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
            },
        ),
        migrations.CreateModel(
            name='PageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom du type de page (ex: Biographie, Discographie, Historique).', max_length=50, unique=True, verbose_name='Nom')),
                ('description', models.CharField(blank=True, help_text='Description du type de page.', max_length=255, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Type de page',
                'verbose_name_plural': 'Types de pages',
            },
        ),
        migrations.CreateModel(
            name='IndexEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom officiel de l'entrée (ex: Michael Jackson, Top DJ Hits)", max_length=255, unique=True, verbose_name='Nom')),
                ('id_forum', models.CharField(blank=True, help_text="ID du forum sous la forme '12345-slug' (ex: 9699-stereotype)", max_length=100, null=True, verbose_name='ID Forum')),
                ('category', models.ForeignKey(help_text="Type d'entrée (artiste, compilation, label, etc.)", on_delete=django.db.models.deletion.CASCADE, to='app_index.category', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': "Entrée de l'index",
                'verbose_name_plural': 'Index - Entrées',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['category'], name='app_index_i_categor_2847c0_idx'), models.Index(fields=['name'], name='app_index_i_name_87e4d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='IndexSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_to_all', models.BooleanField(default=False, help_text='Cochez cette case pour activer les sous-lettres partout (toutes les lettres, chiffres et @).')),
                ('letters_with_sub_buttons', models.TextField(blank=True, help_text="Liste des lettres/chiffres activant les sous-lettres (ex: 'A,B,C,1,2,3').")),
                ('category', models.ForeignKey(blank=True, default=None, help_text="Nom de la catégorie (ex: 'artistes', 'labels', etc.). Laisser vide pour l'index général.", null=True, on_delete=django.db.models.deletion.CASCADE, to='app_index.category')),
            ],
            options={
                'verbose_name': "Configuration de l'index",
                'verbose_name_plural': 'Index - Configuration',
                'indexes': [models.Index(fields=['category'], name='app_index_i_categor_911d3f_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageExistence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom exact de l'entrée, utilisé pour générer les URL.", max_length=255, verbose_name="Nom de l'entrée")),
                ('category', models.ForeignKey(help_text="Catégorie de l'entrée (artiste, compilation, label, lexique).", on_delete=django.db.models.deletion.CASCADE, to='app_index.category', verbose_name='Catégorie')),
                ('page_type', models.ForeignKey(help_text='Type de page existante (biographie, discographie, etc.).', on_delete=django.db.models.deletion.CASCADE, to='app_index.pagetype', verbose_name='Type de page')),
            ],
            options={
                'verbose_name': 'Page existante',
                'verbose_name_plural': 'Index - Pages existantes',
                'indexes': [models.Index(fields=['category', 'name', 'page_type'], name='app_index_p_categor_98bf14_idx')],
                'unique_together': {('category', 'name', 'page_type')},
            },
        ),
    ]
