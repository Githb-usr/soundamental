# Generated by Django 5.1.6 on 2025-03-22 18:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IndexEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nom officiel de l'entrée (ex: Michael Jackson, Top DJ Hits)", max_length=255, unique=True, verbose_name='Nom')),
                ('category', models.CharField(choices=[('artiste', 'Artiste'), ('compilation', 'Compilation'), ('label', 'Label'), ('lexique', 'Lexique')], help_text="Type d'entrée (artiste, compilation, label, etc.)", max_length=50, verbose_name='Catégorie')),
                ('id_forum', models.CharField(blank=True, help_text="ID du forum sous la forme '12345-slug' (ex: 9699-stereotype)", max_length=100, null=True, verbose_name='ID Forum')),
            ],
            options={
                'verbose_name': "Entrée de l'index",
                'verbose_name_plural': 'Index - Entrées',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['category'], name='app_index_i_categor_f1dfa9_idx'), models.Index(fields=['name'], name='app_index_i_name_87e4d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='IndexSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, choices=[('index', 'Index Général'), ('artistes', 'Artistes'), ('labels', 'Labels'), ('compilations', 'Compilations'), ('lexique', 'Lexique')], default='index', help_text="Nom de la catégorie (ex: 'artistes', 'labels', etc.). Laisser vide pour l'index général.", max_length=50, null=True, unique=True)),
                ('apply_to_all', models.BooleanField(default=False, help_text='Cochez cette case pour activer les sous-lettres partout (toutes les lettres, chiffres et @).')),
                ('letters_with_sub_buttons', models.TextField(blank=True, help_text="Liste des lettres/chiffres activant les sous-lettres (ex: 'A,B,C,1,2,3').")),
            ],
            options={
                'verbose_name': "Configuration de l'index",
                'verbose_name_plural': 'Index - Configuration',
                'indexes': [models.Index(fields=['category'], name='app_index_i_categor_b2793e_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageExistence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('artiste', 'Artiste'), ('compilation', 'Compilation'), ('label', 'Label'), ('lexique', 'Lexique')], help_text="Catégorie de l'entrée (artiste, compilation, label, lexique).", max_length=50, verbose_name='Catégorie')),
                ('name', models.CharField(help_text="Nom exact de l'entrée, utilisé pour générer les URL.", max_length=255, verbose_name="Nom de l'entrée")),
                ('page_type', models.CharField(choices=[('artiste_biography', 'Biographie (Artistes)'), ('artiste_discography', 'Discographie (Artistes)'), ('artiste_videography', 'Vidéographie (Artistes)'), ('artiste_bootography', 'Bootographie (Artistes)'), ('compilation_history', 'Historique (Compilations)'), ('compilation_volumes', 'Volumes (Compilations)'), ('compilation_videography', 'Vidéographie (Compilations)'), ('compilation_bootography', 'Bootographie (Compilations)'), ('label_history', 'Historique (Labels)'), ('label_catalog', 'Catalogue (Labels)'), ('label_bootography', 'Bootographie (Labels)')], help_text='Type de page existante (biographie, discographie, etc.).', max_length=50, verbose_name='Type de page')),
            ],
            options={
                'verbose_name': 'Page existante',
                'verbose_name_plural': 'Index - Pages existantes',
                'indexes': [models.Index(fields=['category', 'name', 'page_type'], name='app_index_p_categor_f24176_idx')],
                'unique_together': {('category', 'name', 'page_type')},
            },
        ),
    ]
