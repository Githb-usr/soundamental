# Generated by Django 5.1.6 on 2025-08-28 09:19

# apps/core/app_index/migrations/0012_cleanup_duplicate_indexes.py
from django.db import migrations, connection

def drop_old_idx(apps, schema_editor):
    """
    Supprime l'index 'app_index_indexalias_category_id_old' uniquement s'il existe.
    Ne touche pas aux FKs ni aux donnÃ©es.
    """
    with connection.cursor() as cursor:
        cursor.execute("""
            SELECT COUNT(1)
            FROM information_schema.STATISTICS
            WHERE TABLE_SCHEMA = DATABASE()
              AND TABLE_NAME = 'app_index_indexalias'
              AND INDEX_NAME = 'app_index_indexalias_category_id_old';
        """)
        exists = cursor.fetchone()[0] > 0
        if exists:
            cursor.execute(
                "ALTER TABLE app_index_indexalias "
                "DROP INDEX app_index_indexalias_category_id_old;"
            )

def noop(apps, schema_editor):
    pass

class Migration(migrations.Migration):
    dependencies = [
        ('app_index', '0011_remove_indexalias_uniq_alias_normalized_per_category_and_more'),
    ]
    operations = [
        migrations.RunPython(drop_old_idx, reverse_code=noop),
    ]
